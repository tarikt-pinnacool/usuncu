@import "tailwindcss";
@import "tw-animate-css";

@custom-variant dark (&:is(.dark *));

@theme inline {
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --font-sans: var(--font-geist-sans);
  --font-mono: var(--font-geist-mono);
  --color-sidebar-ring: var(--sidebar-ring);
  --color-sidebar-border: var(--sidebar-border);
  --color-sidebar-accent-foreground: var(--sidebar-accent-foreground);
  --color-sidebar-accent: var(--sidebar-accent);
  --color-sidebar-primary-foreground: var(--sidebar-primary-foreground);
  --color-sidebar-primary: var(--sidebar-primary);
  --color-sidebar-foreground: var(--sidebar-foreground);
  --color-sidebar: var(--sidebar);
  --color-chart-5: var(--chart-5);
  --color-chart-4: var(--chart-4);
  --color-chart-3: var(--chart-3);
  --color-chart-2: var(--chart-2);
  --color-chart-1: var(--chart-1);
  --color-ring: var(--ring);
  --color-input: var(--input);
  --color-border: var(--border);
  --color-destructive: var(--destructive);
  --color-accent-foreground: var(--accent-foreground);
  --color-accent: var(--accent);
  --color-muted-foreground: var(--muted-foreground);
  --color-muted: var(--muted);
  --color-secondary-foreground: var(--secondary-foreground);
  --color-secondary: var(--secondary);
  --color-primary-foreground: var(--primary-foreground);
  --color-primary: var(--primary);
  --color-popover-foreground: var(--popover-foreground);
  --color-popover: var(--popover);
  --color-card-foreground: var(--card-foreground);
  --color-card: var(--card);
  --radius-sm: calc(var(--radius) - 4px);
  --radius-md: calc(var(--radius) - 2px);
  --radius-lg: var(--radius);
  --radius-xl: calc(var(--radius) + 4px);
}

:root {
  --radius: 0.625rem;
  --background: oklch(1 0 0);
  --foreground: oklch(0.145 0 0);
  --card: oklch(1 0 0);
  --card-foreground: oklch(0.145 0 0);
  --popover: oklch(1 0 0);
  --popover-foreground: oklch(0.145 0 0);
  --primary: oklch(0.205 0 0);
  --primary-foreground: oklch(0.985 0 0);
  --secondary: oklch(0.97 0 0);
  --secondary-foreground: oklch(0.205 0 0);
  --muted: oklch(0.97 0 0);
  --muted-foreground: oklch(0.556 0 0);
  --accent: oklch(0.97 0 0);
  --accent-foreground: oklch(0.205 0 0);
  --destructive: oklch(0.577 0.245 27.325);
  --border: oklch(0.922 0 0);
  --input: oklch(0.922 0 0);
  --ring: oklch(0.708 0 0);
  --chart-1: oklch(0.646 0.222 41.116);
  --chart-2: oklch(0.6 0.118 184.704);
  --chart-3: oklch(0.398 0.07 227.392);
  --chart-4: oklch(0.828 0.189 84.429);
  --chart-5: oklch(0.769 0.188 70.08);
  --sidebar: oklch(0.985 0 0);
  --sidebar-foreground: oklch(0.145 0 0);
  --sidebar-primary: oklch(0.205 0 0);
  --sidebar-primary-foreground: oklch(0.985 0 0);
  --sidebar-accent: oklch(0.97 0 0);
  --sidebar-accent-foreground: oklch(0.205 0 0);
  --sidebar-border: oklch(0.922 0 0);
  --sidebar-ring: oklch(0.708 0 0);
}

.dark {
  --background: oklch(0.145 0 0);
  --foreground: oklch(0.985 0 0);
  --card: oklch(0.205 0 0);
  --card-foreground: oklch(0.985 0 0);
  --popover: oklch(0.205 0 0);
  --popover-foreground: oklch(0.985 0 0);
  --primary: oklch(0.922 0 0);
  --primary-foreground: oklch(0.205 0 0);
  --secondary: oklch(0.269 0 0);
  --secondary-foreground: oklch(0.985 0 0);
  --muted: oklch(0.269 0 0);
  --muted-foreground: oklch(0.708 0 0);
  --accent: oklch(0.269 0 0);
  --accent-foreground: oklch(0.985 0 0);
  --destructive: oklch(0.704 0.191 22.216);
  --border: oklch(1 0 0 / 10%);
  --input: oklch(1 0 0 / 15%);
  --ring: oklch(0.556 0 0);
  --chart-1: oklch(0.488 0.243 264.376);
  --chart-2: oklch(0.696 0.17 162.48);
  --chart-3: oklch(0.769 0.188 70.08);
  --chart-4: oklch(0.627 0.265 303.9);
  --chart-5: oklch(0.645 0.246 16.439);
  --sidebar: oklch(0.205 0 0);
  --sidebar-foreground: oklch(0.985 0 0);
  --sidebar-primary: oklch(0.488 0.243 264.376);
  --sidebar-primary-foreground: oklch(0.985 0 0);
  --sidebar-accent: oklch(0.269 0 0);
  --sidebar-accent-foreground: oklch(0.985 0 0);
  --sidebar-border: oklch(1 0 0 / 10%);
  --sidebar-ring: oklch(0.556 0 0);
}

@layer base {
  * {
    @apply border-border outline-ring/50;
  }
  body {
    @apply bg-background text-foreground;
  }
}

/* Add this to the bottom of app/globals.css for testing */
[data-radix-select-content] {
  /* This is a common data attribute for Radix UI (which Shadcn uses) Select content */
  z-index: 1000 !important; /* High value, !important for testing */
}

.custom-place-icon svg {
  display: block; /* Or adjust as needed for your SVG icon */
}

.leaflet-popup-content .popup-bookmark-button svg {
  display: block; /* Or vertical-align: middle; */
}
.leaflet-popup-content {
  font-family: inherit; /* Inherit font from body for consistency */
}
.leaflet-popup-content h3 {
  /* Example styling for popup content */
  /* Add any specific styles for h3 within popups if Tailwind classes aren't applying as expected */
}

/* For Shadcn Sheet, the content is often in a div with data-state="open" */
/* Find the specific selector for SheetContent in your rendered HTML */
/* This is a common pattern for Radix-based components */
div[data-radix-dialog-content],
div[data-radix-sheet-content] {
  z-index: 50 !important; /* Or your chosen higher value like 100 */
}
div[data-radix-dialog-overlay],
div[data-radix-sheet-overlay] {
  z-index: 49 !important; /* Just below the content */
}

.leaflet-tooltip {
  background-color: var(--popover); /* Use your theme's popover background */
  color: var(--popover-foreground);
  border-color: var(--border);
  border-radius: var(--radius-md);
  padding: 4px 8px; /* Adjust padding */
  font-size: 0.75rem; /* text-xs */
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);
}
.leaflet-tooltip-top:before {
  /* Arrow */
  border-top-color: var(--border); /* Match border color */
}
.leaflet-tooltip h4,
.leaflet-tooltip p {
  margin: 0;
  padding: 0;
}

.custom-place-icon {
  /* Ensures the SVG scales nicely if you don't use fixed width/height in the SVG tag itself */
}
.custom-place-icon svg {
  display: block; /* Good practice */
}

.custom-usuncu-tooltip {
  pointer-events: none; /* Keep this to prevent flickering */
  /* Tailwind equivalent classes are in the HTML string above.
     This block is if you need to override something Leaflet's default tooltip CSS does. */
  /* Example: ensure background and text color from theme variables work well */
  background-color: var(--popover);
  color: var(--popover-foreground);
  border: 1px solid var(--border);
  border-radius: var(--radius-md); /* Using your theme's radius */
  padding: 0.5rem; /* p-2 */
  font-size: 0.75rem; /* text-xs */
  box-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1); /* Tailwind shadow-lg */
  max-width: 200px; /* Prevent it from getting too wide */
}

.custom-usuncu-tooltip h5,
.custom-usuncu-tooltip p {
  margin: 0;
  padding: 0;
  line-height: 1.3; /* Adjust for tight spacing */
}

.leaflet-tooltip-top.custom-usuncu-tooltip::before {
  border-top-color: var(--border); /* Match border for the arrow */
}
.leaflet-tooltip-bottom.custom-usuncu-tooltip::before {
  border-bottom-color: var(--border);
}
.leaflet-tooltip-left.custom-usuncu-tooltip::before {
  border-left-color: var(--border);
}
.leaflet-tooltip-right.custom-usuncu-tooltip::before {
  border-right-color: var(--border);
}
